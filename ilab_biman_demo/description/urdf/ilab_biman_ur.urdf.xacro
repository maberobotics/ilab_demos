<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="ilab_biman">
  <!-- import main macro -->
  <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro" />
  <xacro:include filename="$(find ilab_ur_description)/urdf/robotiq_2f_140_macro.urdf.xacro" />
  <xacro:include filename="$(find ilab_ur_description)/urdf/ur_to_robotiq_adapter.urdf.xacro" />
  <xacro:include filename="$(find ilab_ur_description)/urdf/flexicart.xacro"/>

  <xacro:arg name="use_fake_hardware" default="true" />
  <xacro:arg name="use_sim" default="false" />

  <!-- Base frame -->
  <xacro:arg name="ur_base_frame_file" default="$(find ilab_biman_demo)/bringup/config/ur_base_frame.yaml" />
  <xacro:property name="ur_base_frame_file" value="$(arg ur_base_frame_file)"/>
  
  <xacro:property name="ur_base_frame" value="${xacro.load_yaml(ur_base_frame_file)['base_frame']}"/>

  <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
  <xacro:arg name="ur_initial_positions_file" default="$(find ilab_ur_description)/config/initial_positions.yaml" />

  <!-- convert to property to use substitution in function -->
  <xacro:property name="ur_initial_positions_file" default="$(arg ur_initial_positions_file)" />

  <!-- create link fixed to the "world" -->
  <link name="world" />

  <xacro:flexicart
    ns="ur"
    connected_to="world" 
    xyz="${ur_base_frame['x']} ${ur_base_frame['y']} ${ur_base_frame['z']}"
    rpy="${ur_base_frame['roll']} ${ur_base_frame['pitch']} ${ur_base_frame['yaw']}"
  />

  <!-- UR robot -->
  <xacro:ur_robot
    name="ur"
    tf_prefix=""
    parent="ur_flexicart_robot_base"
    joint_limits_parameters_file="$(find ur_description)/config/ur5e/joint_limits.yaml"
    kinematics_parameters_file="$(find ur_description)/config/ur5e/default_kinematics.yaml"
    physical_parameters_file="$(find ur_description)/config/ur5e/physical_parameters.yaml"
    visual_parameters_file="$(find ur_description)/config/ur5e/visual_parameters.yaml"
    transmission_hw_interface=""
    safety_limits="false"
    safety_pos_margin="0.15"
    safety_k_position="20"
    use_fake_hardware="$(arg use_fake_hardware)"
    fake_sensor_commands="false"
    sim_gazebo="$(arg use_sim)"
    sim_ignition="false"
    headless_mode="false"
    initial_positions="${xacro.load_yaml(ur_initial_positions_file)}"
    use_tool_communication="true"
    tool_voltage="24"
    tool_parity="0"
    tool_baud_rate="115200"
    tool_stop_bits="1"
    tool_rx_idle_chars="1.5"
    tool_tx_idle_chars="3.5"
    tool_device_name="/tmp/ttyUR"
    tool_tcp_port="54321"
    robot_ip="172.16.0.3"
    script_filename="$(find ur_client_library)/resources/external_control.urscript"
    output_recipe_filename="$(find ur_robot_driver)/resources/rtde_output_recipe.txt"
    input_recipe_filename="$(find ur_robot_driver)/resources/rtde_input_recipe.txt"
    reverse_ip="0.0.0.0"
    script_command_port="50004"
    reverse_port="50001"
    script_sender_port="50002"
    trajectory_port="50003"
   >
    <origin xyz="0 0 0"
            rpy="0 0 0" /> 
  </xacro:ur_robot>

  <xacro:ur_to_robotiq
    prefix=""
    connected_to="tool0">
  </xacro:ur_to_robotiq>

  <xacro:robotiq_gripper
    name="RobotiqGripperHardwareInterface"
    prefix=""
    parent="gripper_mount_link"
    sim_gazebo="$(arg use_sim)"
    com_port="/tmp/ttyUR"
    use_fake_hardware="$(arg use_fake_hardware)">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:robotiq_gripper>

</robot>
